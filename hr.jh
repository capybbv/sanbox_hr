
//application {
//  config {
//    baseName sandbox2
//    applicationType monolith
//    packageName ortg.ssandwich
//    authenticationType jwt
//    databaseType sql
//    prodDatabaseType postgresql
//    devDatabaseType h2Memory
//    clientFramework angular
//    buildTool maven
//    cacheProvider ehcache
//    languages [en, vi]
//    searchEngine elasticsearch
//    serverPort 8080
//    testFrameworks [gatling]
//  }
//  entities *
// }

entity Region {
	RegionId Integer required unique
    RegionName String
}

entity Countries {
	CountryId String minlength(2) maxlength(2) required unique
    CountryName String 
}

entity Locations{
	LocationId Integer required unique
    StreetAddress String maxlength(40)
    PostalCode String maxlength(12)
    City String maxlength(30)
    StateProvince String maxlength(25)
}

entity Jobs{
	JobId Integer required unique
    JobTitle String required maxlength(35)
    MinSalary Integer
    MaxSalary Integer
}

entity Departments{
	DepartmentId Integer required unique
    DepartmentName String maxlength(30)
}

entity Employees{
	EmployeeId Integer required unique
    FirstName String maxlength(20) 
    LastName String maxlength(25) required
    Email String maxlength(25) required unique
    PhoneNumber String maxlength(20)
    HireDate ZonedDateTime required
    Salary Integer
    CommissionPct Integer
}

entity JobHistory{
	EmployId Integer required unique
    StartDate ZonedDateTime required unique
    EndDate ZonedDateTime required
}

relationship OneToMany {
	@OnDelete("No Action") Region to Countries{CountrRegFk(RegionId)}
	@OnDelete("No Action")  Countries to  Locations{LocCIdFk(CountryId)}
    @OnDelete("No Action") Locations to  Departments{DeptLocFk(LocationId)}
    
	@OnDelete("No Action") Employees to  Employees{EmpManagerFk(EmployeeId)}
	@OnDelete("No Action") Employees to Departments{DepMgrFk(EmployeeId)}
    
    @OnDelete("No Action") Departments to Employees{EmpDeptFk(DepartmentId)}
    @OnDelete("No Action") Jobs to Employees{EmpJobFk(JobId)}
    @OnDelete("No Action") Departments to JobHistory{JhistDepFk(DepartmentId)}
    @OnDelete("No Action") Jobs to JobHistory{JhistJob(JobId)}
}

use serviceImpl, pagination for *
search JobHistory, Employees with elasticsearch






